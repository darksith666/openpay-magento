<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php $_code=$this->getMethodCode() ?>
<ul class="form-list" id="payment_form_<?php echo $_code ?>" style="display:none;">
    <input id="<?php echo $_code ?>_card_token" name="payment[openpay_token]" type="hidden" value="">
    <input id="<?php echo $_code ?>_device_session_id" name="payment[device_session_id]" type="hidden" value="">
    <li>
        <label for="<?php echo $_code ?>_cc_owner" class="required"><em>*</em><?php echo $this->__('Name on Card') ?></label>
        <div class="input-box">
            <input type="text" title="<?php echo $this->__('Name on Card') ?>" class="input-text required-entry" id="<?php echo $_code ?>_cc_owner" name="payment[cc_owner]" value="<?php echo $this->escapeHtml($this->getInfoData('cc_owner')) ?>" />
        </div>
    </li>
    <li>
        <label for="<?php echo $_code ?>_cc_type" class="required"><em>*</em><?php echo $this->__('Credit Card Type') ?></label>
        <div class="input-box">
            <select id="<?php echo $_code ?>_cc_type" name="payment[cc_type]" title="<?php echo $this->__('Credit Card Type') ?>" class="required-entry validate-cc-type-select">
                <option value=""><?php echo $this->__('--Please Select--') ?></option>
            <?php $_ccType = $this->getInfoData('cc_type') ?>
            <?php foreach ($this->getCcAvailableTypes() as $_typeCode => $_typeName): ?>
                <option value="<?php echo $_typeCode ?>"<?php if($_typeCode==$_ccType): ?> selected="selected"<?php endif ?>><?php echo $_typeName ?></option>
            <?php endforeach ?>
            </select>
        </div>
    </li>
    <li>
        <label for="<?php echo $_code ?>_cc_number" class="required"><em>*</em><?php echo $this->__('Credit Card Number') ?></label>
        <div class="input-box">
            <input type="text" id="<?php echo $_code ?>_cc_number" name="payment[cc_number]" title="<?php echo $this->__('Credit Card Number') ?>" class="input-text validate-cc-number validate-cc-type" value="" />
        </div>
    </li>
    <li>
        <label for="<?php echo $_code ?>_expiration" class="required"><em>*</em><?php echo $this->__('Expiration Date') ?></label>
        <div class="input-box">
            <div class="v-fix">
                <select id="<?php echo $_code ?>_expiration" <?php /*name="payment[cc_exp_month]"*/?> class="month validate-cc-exp required-entry">
                <?php $_ccExpMonth = $this->getInfoData('cc_exp_month') ?>
                <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                    <option value="<?php echo $k?$k:'' ?>"<?php if($k==$_ccExpMonth): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                <?php endforeach ?>
                </select>
            </div>
            <div class="v-fix">
                <?php $_ccExpYear = $this->getInfoData('cc_exp_year') ?>
                <select id="<?php echo $_code ?>_expiration_yr" <?php /*name="payment[cc_exp_year]"*/?> class="year required-entry">
                <?php foreach ($this->getCcYears() as $k=>$v): ?>
                    <option value="<?php echo $k?$k:'' ?>"<?php if($k==$_ccExpYear): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                <?php endforeach ?>
                </select>
            </div>
        </div>
    </li>
    <?php echo $this->getChildHtml() ?>
    <?php if($this->hasVerification()): ?>
    <li>
        <label for="<?php echo $_code ?>_cc_cid" class="required"><em>*</em><?php echo $this->__('Card Verification Number') ?></label>
        <div class="input-box">
            <div class="v-fix">
                <input type="text" title="<?php echo $this->__('Card Verification Number') ?>" class="input-text cvv required-entry validate-cc-cvn" id="<?php echo $_code ?>_cc_cid" <?php /*name="payment[cc_cid]"*/?> value="" />
            </div>
            <a href="#" class="cvv-what-is-this"><?php echo $this->__('What is this?') ?></a>
        </div>
    </li>
    <?php endif; ?>
    <?php if ($this->hasSsCardType()): ?>
    <li id="<?php echo $_code ?>_cc_type_ss_div">
        <ul class="inner-form">
            <li class="form-alt"><label for="<?php echo $_code ?>_cc_issue" class="required"><em>*</em><?php echo $this->__('Switch/Solo/Maestro Only') ?></label></li>
            <li>
                <label for="<?php echo $_code ?>_cc_issue"><?php echo $this->__('Issue Number') ?>:</label>
                <span class="input-box">
                    <input type="text" title="<?php echo $this->__('Issue Number') ?>" class="input-text validate-cc-ukss cvv" id="<?php echo $_code ?>_cc_issue" <?php /*name="payment[cc_ss_issue]"*/?> value="" />
                </span>
            </li>

            <li>
                <label for="<?php echo $_code ?>_start_month"><?php echo $this->__('Start Date') ?>:</label>
                <div class="input-box">
                    <div class="v-fix">
                        <select id="<?php echo $_code ?>_start_month" <?php /*name="payment[cc_ss_start_month]"*/?> class="validate-cc-ukss month">
                        <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                            <option value="<?php echo $k?$k:'' ?>"<?php if($k==$this->getInfoData('cc_ss_start_month')): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                        <?php endforeach ?>
                        </select>
                    </div>
                    <div class="v-fix">
                        <select id="<?php echo $_code ?>_start_year" <?php /*name="payment[cc_ss_start_year]"*/?> class="validate-cc-ukss year">
                        <?php foreach ($this->getSsStartYears() as $k=>$v): ?>
                            <option value="<?php echo $k?$k:'' ?>"<?php if($k==$this->getInfoData('cc_ss_start_year')): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                        <?php endforeach ?>
                        </select>   
                    </div>
                </div>
            </li>

            <li class="adv-container">&nbsp;</li>
        </ul>
        <script type="text/javascript">
        //<![CDATA[
        var SSChecked<?php echo $_code ?> = function() {
            var elm = $('<?php echo $_code ?>_cc_type');
            if (['SS','SM','SO'].indexOf(elm.value) != -1) {
                $('<?php echo $_code ?>_cc_type_ss_div').show();
            } else {
                $('<?php echo $_code ?>_cc_type_ss_div').hide();
            }
        };

        Event.observe($('<?php echo $_code ?>_cc_type'), 'change', SSChecked<?php echo $_code ?>);
        SSChecked<?php echo $_code ?>();
        //]]>
        </script>
    </li>
    <?php endif; ?>
</ul>
<script type="text/javascript">
    //<![CDATA[
    var oneStepForm = document.getElementById("onestepcheckout-form");
    // create openpay device session id for fraud prevention
    var deviceSessionId = OpenPay.deviceData.setup();
    
    function onSuccess(e){

        // set openpay values to be saved in db
        document.getElementById('<?php echo $_code ?>_card_token').value = e.data.id;
        //document.getElementById('<?php echo $_code ?>_cc_number').value = e.data.card.card_number;
        document.getElementById('<?php echo $_code ?>_device_session_id').value = deviceSessionId;

        if (window["IWD"] && IWD.OPC) {
            openpayTempSave();
        } else if (oneStepForm != null) {
            openpayTempSave();
        } else {
            var request = new Ajax.Request(
                payment.saveUrl, {
                    method:'post',
                    onComplete: payment.onComplete,
                    onSuccess: payment.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(payment.form)
                }
            );
        }
    }

    function onError(e){
        // on payment error display error and reset loading button
        alert(getErrorDescription(e.data));
        if (window["IWD"] && IWD.OPC) {
            IWD.OPC.Checkout.unlockPlaceOrder();
        } else if (oneStepForm != null) {
            already_placing_order = false;
            var submitelement = $('onestepcheckout-place-order');
            /* Disable button to avoid multiple clicks */
            submitelement.removeClassName('grey').addClassName('orange');
            submitelement.disabled = false;
            submitelement.parentNode.lastChild.remove();
            return false;
        } else {
            payment.resetLoadWaiting();
        }
    }
    function getErrorDescription(data){
        if (data.error_code == 1001 || data.error_code == 1003) {
            return "La información de facturación esta incompleta o es incorrecta, favor de verificarla.";
        } if (data.error_code == 2005){
             return "Fecha de expiración inválida.";
        } if (data.error_code == 2006){
             return "El código cvv es requerido.";
        } if (data.error_code == 2004){
             return "Número de tarjeta inválido.";
        } if (data.error_code == 1004){
             return "Servicio no disponible";
        }  

        return "Ocurrió un error interno que no permitio que la operación se completara.";
        
    }

    // add a save function to validate form, if valid generate OpenPay Token, and save into Magento
    function processOpenpayToken(){
        // if payment used is openpay
        if(payment.lastUsedMethod == '<?php echo $_code ?>'){
            checkout.setLoadWaiting('payment');
            createOpenpayToken();
        }
    }

    function createOpenpayToken() {
        
        OpenPay.setId('<?php echo Mage::getStoreConfig('payment/common/merchantid');?>');
        OpenPay.setApiKey('<?php echo Mage::getStoreConfig('payment/common/publickey');?>');
        
        <?php if(Mage::getStoreConfig('payment/common/sandbox')):?>OpenPay.setSandboxMode(true);<?php endif;?>
        <?php $_billingInfo = Mage::getSingleton('checkout/session')->getQuote()->getBillingAddress()->getData();?>
        <?php $_streetInfo = explode("\n", $_billingInfo['street'], 2);?>
        var expiration_year = document.getElementById('<?php echo $_code ?>_expiration_yr').value.toString();
        
        var tokenData = {
                "card_number": document.getElementById('<?php echo $_code ?>_cc_number').value,
                "holder_name": document.getElementById('<?php echo $_code ?>_cc_owner').value,
                "expiration_year": expiration_year.substr(expiration_year.length -2),
                "expiration_month": document.getElementById('<?php echo $_code ?>_expiration').value,
                "cvv2": document.getElementById('<?php echo $_code ?>_cc_cid').value
            };

        if (window["IWD"] && IWD.OPC) {
            //Obtenerlos desde el formulario
            var addressData ={
                    "city":  document.getElementById('billing:city').value.substring(0,30),
                    "line1": document.getElementById('billing:street1').value.substring(0,45),
                    "line2": document.getElementById('billing:street2').value.substring(0,45),
                    "postal_code": document.getElementById('billing:postcode').value.substring(0,45),
                    "state": document.getElementById('billing:region').value.substring(0,45),
                    "country_code": document.getElementById('billing:country_id').value.substring(0,2) 
            }

            tokenData['address'] = addressData;

        } else if (oneStepForm != null) {
            //ver como se obtienen los datos de este formulario
            var addressData ={
                    "city":  document.getElementById('billing:city').value.substring(0,30),
                    "line1": document.getElementById('billing:street1').value.substring(0,45),
                    "line2": document.getElementById('billing:street2').value.substring(0,45),
                    "postal_code": document.getElementById('billing:postcode').value.substring(0,45),
                    "state": document.getElementById('billing:region') ? document.getElementById('billing:region').value.substring(0,45) : "",
                    "country_code": document.getElementById('billing:country_id').value.substring(0,2)
            }

            tokenData['address'] = addressData;


        } else {
            //es el proceso normal
            var addressData = {
                    "city": '<?php echo $this->escapeHTML(substr(trim($_billingInfo['city']), 0, 30));?>',
                    "line1": '<?php echo $this->escapeHTML(substr(trim($_streetInfo[0]), 0, 45));?>',
                    "line2": '<?php echo $this->escapeHTML(substr(trim($_streetInfo[1]), 0, 45));?>',
                    "postal_code": '<?php echo $this->escapeHTML(substr(trim($_billingInfo['postcode']), 0, 45));?>',
                    "state": '<?php echo $this->escapeHTML(substr(trim($_billingInfo['region']), 0, 45));?>',
                    "country_code": '<?php echo $this->escapeHTML(substr(trim($_billingInfo['country_id']), 0, 2));?>'
                }
            

            tokenData['address'] = addressData;
        }



         OpenPay.token.create(tokenData,
            function(e){
                onSuccess(e);
            },
            function(e){
                onError(e);
            }
        );
    }

    // temporarily save the payment.save method
    payment.tempSave = function(){
        if (checkout.loadWaiting!=false) return;
        var validator = new Validation(this.form);
        if (this.validate() && validator.validate()) {
            checkout.setLoadWaiting('payment');
            var request = new Ajax.Request(
                this.saveUrl,
                {
                    method:'post',
                    onComplete: this.onComplete,
                    onSuccess: this.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(this.form)
                }
            );
        }
    };

    // overwrite payment.save method to check if openpay is the method used
    payment.save = function(){
        if(payment.lastUsedMethod == '<?php echo $_code ?>'){
            if(payment.openpayIsValid()){
                payment.openpaySave();
            }else{
                payment.tempSave();
            }
        }else{
            payment.tempSave();
        }
    }

    payment.openpaySave = function(){
        processOpenpayToken();
    }

    payment.openpayIsValid = function(){
        var expMonth = document.getElementById('<?php echo $_code ?>_expiration').value;
        var expYear = document.getElementById('<?php echo $_code ?>_expiration_yr').value;
        var cardNumber = document.getElementById('<?php echo $_code ?>_cc_number').value;

        var e = document.getElementById("<?php echo $_code ?>_cc_type");
        var selectedType = e.options[e.selectedIndex].innerHTML;


        var validator = new Validation(payment.form);

        // simply validate card details with openpay.js methods and magento's propietary ones
        if(OpenPay.card.validateExpiry(expMonth, expYear) &&
            OpenPay.card.validateAcceptCardNumber(cardNumber) &&
            OpenPay.card.cardType(cardNumber).toLowerCase() == selectedType.toLowerCase() &&
            validator.validate()){
            return true;
        } else{
            return false;
        }
    }

    var processPayment = function() {
      //var currentMethod = (oneStepForm != null) ? payment.currentMethod : payment.lastUsedMethod;
      if(payment.lastUsedMethod == '<?php echo $_code ?>'){
        if (payment.openpayIsValid()) {
          createOpenpayToken();
        } else {
          openpayTempSave();
        }
      } else {
        openpayTempSave();
      }
    }

    if (window["IWD"] && IWD.OPC) {
        var initSaveOrder = function() {
            IWD.OPC.saveOrderStatus = true;
            IWD.OPC.Plugin.dispatch('saveOrderBefore');
            if (IWD.OPC.Checkout.isVirtual === false) {
              IWD.OPC.Checkout.lockPlaceOrder();
              IWD.OPC.Shipping.saveShippingMethod();
            } else {
              IWD.OPC.validatePayment();
            }
          }
      var openpayTempSave = function() {
        initSaveOrder();
      }
      IWD.OPC.initSaveOrder = function() {
        $(document).on('click', '.opc-btn-checkout', function() {

          if (IWD.OPC.Checkout.disabledSave == true) {
            return;
          }
          var addressForm = new VarienForm('billing-new-address-form');
          if (!addressForm.validator.validate()) {
            return;
          }

          if (!$j ('input[name="billing[use_for_shipping]"]').prop('checked')) {
            var addressForm = new VarienForm('opc-address-form-shipping');
            if (!addressForm.validator.validate()) {
              return;
            }
          }
          processPayment();
        });
      }
    } else if (oneStepForm != null) {
        var openpayTempSave = function() {
        var form = new VarienForm('onestepcheckout-form');
        if (form.validator.validate()) {
          /* Submit the form */
          $('onestepcheckout-form').submit();
        } else {
          already_placing_order = false;
          var submitelement = $('onestepcheckout-place-order');
          /* Disable button to avoid multiple clicks */
          submitelement.removeClassName('grey').addClassName('orange');
          submitelement.disabled = false;
          submitelement.parentNode.lastChild.remove();
        }
      }
      $$('.onestepcheckout-place-order').each(function(elem) {
        elem.observe('click', function(e) {
          already_placing_order = true;
          var submitelement = $('onestepcheckout-place-order');
          submitelement.removeClassName('orange').addClassName('grey');
          submitelement.disabled = true;
          var loaderelement = new Element('span').
          addClassName('onestepcheckout-place-order-loading').
          update('Por favor espere, estamos procesando su orden...');
          submitelement.parentNode.appendChild(loaderelement);
          processPayment();
        });
      });
    }

    //]]>
</script>
